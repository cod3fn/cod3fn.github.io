<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scala on 香取</title>
    <link>https://xiongdahu.github.io/tags/scala/</link>
    <description>Recent content in scala on 香取</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 19 May 2019 16:49:14 +0800</lastBuildDate>
    
	<atom:link href="https://xiongdahu.github.io/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scala Collection Tips</title>
      <link>https://xiongdahu.github.io/post/scala-collection-tips/</link>
      <pubDate>Sun, 19 May 2019 16:49:14 +0800</pubDate>
      
      <guid>https://xiongdahu.github.io/post/scala-collection-tips/</guid>
      <description>scala collection is high-performance,但是需要清</description>
    </item>
    
    <item>
      <title>Useful Scala Code Snippets</title>
      <link>https://xiongdahu.github.io/post/useful-scala-code-snippets/</link>
      <pubDate>Fri, 26 Apr 2019 07:54:00 +0800</pubDate>
      
      <guid>https://xiongdahu.github.io/post/useful-scala-code-snippets/</guid>
      <description>merge two map and sum its values 多个map合并,key相同时则val</description>
    </item>
    
    <item>
      <title>Scala Future</title>
      <link>https://xiongdahu.github.io/post/scala-future/</link>
      <pubDate>Sun, 21 Apr 2019 14:36:36 +0800</pubDate>
      
      <guid>https://xiongdahu.github.io/post/scala-future/</guid>
      <description>&lt;p&gt;some notes on scala future, includes:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pattern Matching Anonymous Function</title>
      <link>https://xiongdahu.github.io/post/pattern-matching-anonymous-function/</link>
      <pubDate>Sun, 31 Mar 2019 13:10:41 +0800</pubDate>
      
      <guid>https://xiongdahu.github.io/post/pattern-matching-anonymous-function/</guid>
      <description>Scala中很多使用if的地方都可以用match c</description>
    </item>
    
    <item>
      <title>Scala Type Class</title>
      <link>https://xiongdahu.github.io/post/scala-type-class/</link>
      <pubDate>Sun, 31 Mar 2019 12:58:17 +0800</pubDate>
      
      <guid>https://xiongdahu.github.io/post/scala-type-class/</guid>
      <description>intro def insertionSort(xs: List[Int]): List[Int] = { def insert(y: Int, ys: List[Int]): List[Int] = ys match { case List() =&amp;gt; y :: List() case z</description>
    </item>
    
  </channel>
</rss>